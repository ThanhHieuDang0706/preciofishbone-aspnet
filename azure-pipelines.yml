trigger:
- deploy

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  projectName: 'PrecioFishBoneVietnamASP.NETTraining'
  publishProfile: 'hieudang - Web Deploy'

steps:
- task: DotNetCoreCLI@2
  displayName: New Manifest for tool
  inputs:
    command: custom
    custom: 'new '
    arguments: tool-manifest
- task: DotNetCoreCLI@2
  displayName: Install EF Tool
  inputs:
    command: custom
    custom: 'tool '
    arguments: install dotnet-ef

- task: DotNetCoreCLI@2
  displayName: Create SQL Scripts
  inputs:
    command: custom
    custom: 'ef '
    arguments: migrations script --output $(Build.SourcesDirectory)/SQL/item.sql --idempotent --project $(Build.SourcesDirectory)/$(projectName)/$(projectName).csproj --context ItemDbContext

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    projects: $(BuildParameters.RestoreBuildProjects)
    arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
    zipAfterPublish: True
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: SQLScripts'
  inputs:
    PathtoPublish: $(Build.SourcesDirectory)/SQL/tododbscript.sql
    ArtifactName: SQLScripts

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)" /p:PublishProfile="$(publishProfile)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'



